---
# Create Controller Template
- name: 'Add job template resources to {{ controller_host }}'
  ansible.controller.job_template:
    name: '{{ __template_item.name | mandatory }}'
    new_name: '{{ __template_item.new_name | default(omit, true) }}'
    copy_from: '{{ __template_item.copy_from | default(omit, true) }}'
    description: '{{ __template_item.description | default(omit, true) }}'
    execution_environment: '{{ __template_item.execution_environment | default(omit, true) }}'
    job_type: "{{ __template_item.job_type | default('run') }}"
    inventory: '{{ __template_item.inventory | default(omit, true) }}'
    project: '{{ __template_item.project | default(omit, true) }}'
    playbook: '{{ __template_item.playbook | default(omit, true) }}'
    credentials: "{{ __template_item.credentials | default([]) | map(attribute='name') | list }}"
    forks: '{{ __template_item.forks | default(omit, true) }}'
    limit: '{{ __template_item.limit | default(omit, true) }}'
    verbosity: '{{ __template_item.verbosity | default(omit, true) }}'
    extra_vars: '{{ __template_item.extra_vars | default(omit, true) }}'
    job_tags: '{{ __template_item.job_tags | default(omit, true) }}'
    force_handlers: '{{ __template_item.force_handlers | default(omit) }}'
    skip_tags: '{{ __template_item.skip_tags | default(omit, true) }}'
    start_at_task: '{{ __template_item.start_at_task | default(omit, true) }}'
    diff_mode: '{{ __template_item.diff_mode | default(omit) }}'
    use_fact_cache: '{{ __template_item.use_fact_cache | default(omit) }}'
    host_config_key: '{{ __template_item.host_config_key | default(omit, true) }}'
    ask_scm_branch_on_launch: '{{ __template_item.ask_scm_branch_on_launch | default(omit) }}'
    ask_diff_mode_on_launch: '{{ __template_item.ask_diff_mode_on_launch | default(omit) }}'
    ask_variables_on_launch: '{{ __template_item.ask_variables_on_launch | default(omit) }}'
    ask_limit_on_launch: '{{ __template_item.ask_limit_on_launch | default(omit) }}'
    ask_tags_on_launch: '{{ __template_item.ask_tags_on_launch | default(omit) }}'
    ask_skip_tags_on_launch: '{{ __template_item.ask_skip_tags_on_launch | default(omit) }}'
    ask_job_type_on_launch: '{{ __template_item.ask_job_type_on_launch | default(omit) }}'
    ask_verbosity_on_launch: '{{ __template_item.ask_verbosity_on_launch | default(omit) }}'
    ask_inventory_on_launch: '{{ __template_item.ask_inventory_on_launch | default(omit) }}'
    ask_credential_on_launch: '{{ __template_item.ask_credential_on_launch | default(omit) }}'
    survey_enabled: '{{ __template_item.survey_enabled | default(omit) }}'
    survey_spec: '{{ __template_item.related.survey_spec | default(omit, true) }}'
    become_enabled: '{{ __template_item.become_enabled | default(omit) }}'
    allow_simultaneous: '{{ __template_item.allow_simultaneous | default(omit) }}'
    timeout: '{{ __template_item.timeout | default(omit, true) }}'
    instance_groups: '{{ __template_item.instance_groups | default(omit, true) }}'
    job_slice_count: '{{ __template_item.job_slice_count | default(1) }}'
    webhook_service: '{{ __template_item.webhook_service | default(omit, true) }}'
    webhook_credential: '{{ __template_item.webhook_credential | default(omit, true) }}'
    scm_branch: '{{ __template_item.scm_branch | default(omit, true) }}'
    labels: "{{ __template_item.labels | default([]) | map(attribute='name') | list }}"
    state: "{{ __template_item.state | default('present') }}"
    notification_templates_started: "{{ __template_item.notification_templates_started | default([]) | map(attribute='name') | list }}"
    notification_templates_success: "{{ __template_item.notification_templates_success | default([]) | map(attribute='name') | list }}"
    notification_templates_error: "{{ __template_item.notification_templates_error | default([]) | map(attribute='name') | list }}"

    # Role Standard Options | Values found in Defaults\main.yml
    controller_host: '{{ controller_host }}'
    controller_username: '{{ controller_username }}'
    controller_password: '{{ controller_password }}'
    controller_oauthtoken: '{{ controller_oauthtoken }}'
  loop: '{{ job_templates }}'
  loop_control:
    loop_var: __template_item
  no_log: '{{ secure_logging }}'
  async: '{{ ansible_check_mode | ternary(0, 1000) }}'
  poll: 0
  register: __template_job_async
  changed_when: not __template_job_async.changed
  vars:
    ansible_async_dir: '/tmp/.ansible_async'
  ignore_errors: '{{ ignore_job_errors }}'

- name: 'Wait for job templates configuration on {{ controller_host }}'
  async_status:
    jid: '{{ __template_job_async_result_item.ansible_job_id }}'
  register: __template_job_async_result
  until: __template_job_async_result.finished
  retries: '{{ async_retries }}'
  delay: '{{ async_delay }}'
  loop: '{{ __template_job_async.results }}'
  loop_control:
    loop_var: __template_job_async_result_item
  when: __template_job_async_result_item.ansible_job_id is defined
  no_log: '{{ secure_logging }}'
  vars:
    ansible_async_dir: '/tmp/.ansible_async'
  ignore_errors: '{{ ignore_job_errors }}'
