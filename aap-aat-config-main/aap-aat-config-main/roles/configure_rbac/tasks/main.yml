---
- name: 'Add RBAC resources to {{ controller_host }}'
  ansible.controller.role:
    user: '{{ __role_item.user | default(omit, true) }}'
    team: '{{ __role_item.team | default(omit, true) }}'
    role: '{{ __role_item.role | mandatory }}'
    inventories: '{{ __role_item.inventories | default(omit, true) }}'
    job_templates: '{{ __role_item.job_templates | default(omit, true) }}'
    workflows: '{{ __role_item.workflows | default(omit, true) }}'
    credentials: '{{ __role_item.credentials | default(omit, true) }}'
    projects: '{{ __role_item.projects | default(omit, true) }}'
    lookup_organization: '{{ __role_item.lookup_organization | default(omit, true) }}'
    state: "{{ __role_item.state | default('present') }}"

    # Role Standard Options | Values found in Defaults\main.yml
    controller_host: '{{ controller_host }}'
    controller_username: '{{ controller_username }}'
    controller_password: '{{ controller_password }}'
    controller_oauthtoken: '{{ controller_oauthtoken }}'
  loop: '{{ rbac }}'
  loop_control:
    loop_var: __role_item
  no_log: '{{ secure_logging }}'
  async: '{{ ansible_check_mode | ternary(0, 1000) }}'
  poll: 0
  register: __rbac_job_async
  changed_when: not __rbac_job_async.changed
  vars:
    ansible_async_dir: '/tmp/.ansible_async'
  ignore_errors: '{{ ignore_job_errors }}'

- name: 'Wait for RBAC configuration on {{ controller_host }}'
  async_status:
    jid: '{{ __rbac_job_async_results_item.ansible_job_id }}'
  register: __rbac_job_async_result
  until: __rbac_job_async_result.finished
  retries: '{{ async_retries }}'
  delay: '{{ async_delay }}'
  loop: '{{ __rbac_job_async.results }}'
  loop_control:
    loop_var: __rbac_job_async_results_item
  when: __rbac_job_async_results_item.ansible_job_id is defined
  no_log: '{{ secure_logging }}'
  vars:
    ansible_async_dir: '/tmp/.ansible_async'
  ignore_errors: '{{ ignore_job_errors }}'
