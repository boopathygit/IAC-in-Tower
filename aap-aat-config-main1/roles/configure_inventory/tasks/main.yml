---
- name: 'Add inventory resources on {{ controller_host }}'
  ansible.controller.inventory:
    name: '{{ __inv_item.name | mandatory }}'
    copy_from: '{{ __inv_item.copy_from | default(omit, true) }}'
    description: '{{ __inv_item.description | default(omit, true) }}'
    organization: '{{ __project_item.organization | default("Default", true) }}'
    instance_groups: '{{ __inv_item.instance_groups | default(omit, true) }}'
    variables: "{{ __inv_item.variables | default(omit, true) | regex_replace('[ ]{2,}','') }}"
    kind: '{{ __inv_item.kind | default(omit, true) }}'
    host_filter: '{{ __inv_item.host_filter | default(omit, true) }}'
    state: "{{ __inv_item.state | default('present') }}"

    # Role Standard Options | Values found in Defaults\main.yml
    controller_host: '{{ controller_host }}'
    controller_username: '{{ controller_username }}'
    controller_password: '{{ controller_password }}'
    controller_oauthtoken: '{{ controller_oauthtoken }}'
  loop: '{{ inventories }}'
  loop_control:
    loop_var: __inv_item
  no_log: '{{ secure_logging }}'
  async: '{{ ansible_check_mode | ternary(0, 1000) }}'
  poll: 0
  register: __inv_job_async
  changed_when: not __inv_job_async.changed
  vars:
    ansible_async_dir: '/tmp/.ansible_async'
  ignore_errors: '{{ ignore_job_errors }}'

- name: 'Wait for inventory configuration on {{ controller_host }}'
  async_status:
    jid: '{{ __inv_job_async_result_item.ansible_job_id }}'
  register: __inv_job_async_result
  until: __inv_job_async_result.finished
  retries: '{{ async_retries }}'
  delay: '{{ async_delay }}'
  loop: '{{ __inv_job_async.results }}'
  loop_control:
    loop_var: __inv_job_async_result_item
  when: __inv_job_async_result_item.ansible_job_id is defined
  no_log: '{{ secure_logging }}'
  vars:
    ansible_async_dir: '/tmp/.ansible_async'
  ignore_errors: '{{ ignore_job_errors }}'
